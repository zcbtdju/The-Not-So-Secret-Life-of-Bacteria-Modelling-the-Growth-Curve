include gro

fp := fopen ( "C:/Users/Daniel/Documents/Gro-LIA/GRO-LIA-master/0.1 Data/final_model_info.csv", "w" );
sp := fopen ( "C:/Users/Daniel/Documents/Gro-LIA/GRO-LIA-master/0.1 Data/final_model_stats.csv", "w" );

set("ecoli_growth_rate",0.0);
set ("dt", 0.01);
set("population_max", 20000);

fun expo_decay a b c . a * (0.5)^( b / c );
fun FtsZ_degradation a . -980.12523*log(a) + 8826.63198;
fun div a b . a / b;
fun monod_s a b c d . a * (( b * c )/( d + c ));
fun monod_c b c d . (( b * c )/( d + c ));
fun dormancy a b c d . a * b *((2.71828)^(c * d));
fun cell_death a b c . a * ((2.71828)^(- b * c ));
fun death_miu_rate a . 0.21 * ((2.71828)^( 1 * a ));
fun statistics L .
	let n := length(L), mu := (sumlist L) / n in
		[ num := n, mean := mu, std := sqrt (sumlist (map (\ x . (x-mu)^2) L) / n), sum := sumlist L ]
	end;


extracellular_glucose := 20;	//g/L	20 ~1,0000 cell population

timestep := 0.01;
num_cells := 1;

FtsZ_gene := 1152;		//bp - FtsZ gene length
FtsZ_protein := 383;	//aa - FtsZ protein length
nuc_per_rib := 60;		//nucleotides per ribosome
FtsZ_mRNA_max := 3;		//max FtsZ mRNA
mRNA_half_life := 10; 	//minutes
FtsZ_max := 6000;		//Copies of protein per cell

FtsZ_timer := 0;

transcription_rate := timestep*0.6613756614;		//1000bp/1512bp gene length
translation_rate := timestep*15.03916449;			//300aa/383aa protein * 1152bp/60bp
glycogen_limit := 55316397.24;						//glycogen converted to glucose

glucose_uti_log := 7941011;
glucose_uti_lag := 397050.5333;
glucose_uti_tran := 795934.5877;
glucose_uti_stationary := 397050.5333;
glucose_uti_death := 102457.6389;
glucose_uti_dormant := 1024.576389;
glucose_uti_lag_expo := 3560759.998;

miu_max := 0.0233; 			//units = per minute
ks := 0.003; 				//units = g / L
gamma := 0.01597048; 		// units = g/g
N := 0;

avg_proteins := 3.113965768E+9;	//*100% of average proteins converted into glucose
avg_volume := 2.611559094;
percent_consumption := 0.75;

constant_1 := 0.0100775758533556;
constant_2 := 0.000228048;
dor_cells := 0;

timestep_trigger := 0;

sig_dif := 20;
sig_deg := 5;
sig_emi := 0.4;
sig_det := 1;
yes := 0;
EDF := signal (sig_dif,sig_deg);

total_cells := 1;
dead_cells := 0;
pop_decay := 0;

mutation := 0;
a := 10;
mutant := 1;

UNDEC := 0;
LTSP := 1;


program p() := {

check := 0;
mode := 0;
time := 0;
r := [t:=0, s:=0];
	true :{r.t := r.t + dt, r.s := r.s + dt}
	true : {time := r.t}


//lag phase

FtsZ := 0;
FtsZ_mRNA := 0;
glycogen := 55316397.24;
glycogen_ratio := 1;

lag := 1.0E+5;

extracellular_glucose > 0 : {FtsZ_mRNA := FtsZ_mRNA + transcription_rate}
FtsZ_mRNA + transcription_rate >= FtsZ_mRNA_max : {FtsZ_mRNA := FtsZ_mRNA_max}

extracellular_glucose = 0 : {FtsZ_mRNA := expo_decay FtsZ_mRNA_max time mRNA_half_life}
extracellular_glucose = 0 & FtsZ_mRNA < 0.001 : {FtsZ_mRNA := 0}

	FtsZ_mRNA < 0.1 : {glycogen_ratio := 0.5 * (div glycogen glycogen_limit) + 0.5}
extracellular_glucose > 0 : {FtsZ := FtsZ + translation_rate*FtsZ_mRNA*glycogen_ratio}
FtsZ + translation_rate*FtsZ_mRNA*glycogen_ratio >= FtsZ_max : {FtsZ := FtsZ_max}

extracellular_glucose = 0 : {FtsZ_timer := FtsZ_timer + timestep*1}
extracellular_glucose = 0 : {FtsZ := (FtsZ_degradation FtsZ_timer)}
extracellular_glucose = 0 & FtsZ <= 0 : {FtsZ := 0}
extracellular_glucose > 0 : {FtsZ_timer := 0}

FtsZ = FtsZ_max : {lag := 0}

r.t > 0.5 & lag > 0 : {glycogen := glycogen - glucose_uti_lag}
glycogen - glucose_uti_lag <= 0 : {glycogen := 0}


//exponential phase
lag = 0 & extracellular_glucose > 0 : {mode := 1}

mode = 1 : {extracellular_glucose := extracellular_glucose - timestep*( monod_s gamma miu_max extracellular_glucose ks )}
extracellular_glucose - ( monod_s gamma miu_max extracellular_glucose ks ) <= 0 : {extracellular_glucose := 0}

mode = 1 : {N := N + timestep*( monod_c miu_max extracellular_glucose ks )}

mode = 1 : {set("ecoli_growth_rate", 0.01*(div (N*1.35010033392) num_cells))}
mode = 1 & N <= num_cells : {set("ecoli_growth_rate", 0), mode := 0}

volume = 3.14 : {divide()}

mode = 1 : {glycogen := glycogen_limit}

extracellular_glucose <= 0.5 : {mode := 2, extracellular_glucose := 0}
mode = 2 : {set("ecoli_growth_rate", 0)}


//stationary phase	
mode = 2 : {glycogen := glycogen - dt*glucose_uti_tran, set("ecoli_growth_rate", 0.034*0.5)}
	
glycogen - glucose_uti_tran < 0 : {glycogen := 0}

proteins := 0;
dt < 1 & true : {proteins := (div (avg_proteins*percent_consumption) avg_volume)*volume}

extracellular_glucose = 0 & glycogen = 0 : {mode := 3, set("ecoli_growth_rate", 0)}

mode = 3 : {timestep_trigger := timestep_trigger + 1}
dt = 1 : {set("ecoli_growth_rate", 0), proteins := proteins - glucose_uti_stationary, check := check + 1}

//mode = 3 & rate (100) : {proteins := proteins - dt*glucose_uti_stationary}
proteins - dt*glucose_uti_stationary <= 0 : {proteins := 0}
	
dormancy_trigger := 0;
cfp := 0;

mode = 3 & rate (100) :{dormancy_trigger := 1*(dormancy num_cells constant_1 constant_2 time), cfp := 0}
mode = 3 & dormancy_trigger >= num_cells : {dormancy_trigger := num_cells}
mode = 3 & dormancy_trigger - 1 > dor_cells & rate (100) : {mode := 1, dor_cells := dor_cells + 1}
mode = 3 & dormancy_trigger = num_cells : {mode := 4, dor_cells := dor_cells + 1}
mode = 4 : {cfp := 50*volume}


mode = 3 & proteins <= 0 : {mode := 5, timestep_trigger := 0}

gfp := 0;
mode = 5 : {emit_signal(EDF,sig_emi)}
get_signal (EDF) > sig_det & rate (100) : {yes := 1}
get_signal (EDF) > sig_det & rate (0.01*rand(10)) : {sig_emi := 0.8}

sig_emi = 0.8 & id > 4 : {mode := 6}
sig_emi = 0.8 & id <= 4 : {mode := 8}

//Death phase
death_time := 0;
death_rate := 0;
true : {death_rate := (death_miu_rate miu_max)*0.0006944444}
true : {total_cells := num_cells - dead_cells}

mode = 6 : {death_time := death_time + dt}
mode = 6 : {pop_decay := num_cells - (cell_death num_cells death_rate death_time)}

mode = 6 & pop_decay > dead_cells & rate (1) :{die(), dead_cells := dead_cells + 1}


//Long term stationary phase
	restart := 0;
	keep := 0;
	
	gfp := 0;
	yfp := 0;
	cfp := 0;
	rfp := 0;



mutation = 14400 : {mode := a + 1, restart := 1, keep := 1.0E+10}

mutation = 14398 & keep > 0 : {keep := 0}

r.t > 14398 & keep = 0 & rate (0.00005) : {die(), dead_cells + 1}
keep > 0 : {set("ecoli_growth_rate", 0.00035)} 

keep > 0 & rate (100) : {mode := a + 1}

mode = 10 : {gfp := volume*0, rfp := volume*0, yfp := volume*10, cfp := volume*20}

mode = 11 : {gfp := volume*10, rfp := volume*25, yfp := volume*0, cfp := volume*0}

mode = 12 : {gfp := volume*0, rfp := volume*0, yfp := volume*0, cfp := volume*15}

mode = 13 : {gfp := volume*0, rfp := volume*0, yfp := volume*15, cfp := volume*0}

mode = 14 : {gfp := volume*0, rfp := volume*15, yfp := volume*0, cfp := volume*0}

mode = 15 : {gfp := volume*15, rfp := volume*0, yfp := volume*0, cfp := volume*0}
	
restart = 1 : {mutation := 0, a := a + 1}
mutation = 0 : {restart := 0}

	daughter : {num_cells := id + 1}
	
	selected :{
	print("Time=", r.s, "id=", id, "FtsZ_mRNA=", FtsZ_mRNA, "FtsZ=", FtsZ, "time=", time, "glycogen=", glycogen,
	"glycogen_ratio=", glycogen_ratio, "lag=", lag, "glucose=", extracellular_glucose, "mode=", mode,
	"proteins=", proteins, "dt=", dt, "check=", check, "mutation=", mutation, "a=", a)
	}

};

program main() := {

t := 0;
s := 0;
true : {t := t + dt, s := s + dt}

true : {mutation := mutation + dt*1}

timestep_trigger >= 10000 : {set ("dt", 1)};
//timestep_trigger < 10000: {set ("dt", 0.01)};

L := {};
Li := {};
stats := [num := 0, mean := 0, std := 0, sum := 0];

s >= 100 :{
		s := 0,
		L := maptocells mode end,
		stats := statistics L,
		fprint (sp, t, ", ", stats.num, ", ", stats.mean, ", ", stats.std, ", ", stats.sum, ", ", num_cells, "\n")
		}

};

ecoli ([x:=0, y:=0], program p());